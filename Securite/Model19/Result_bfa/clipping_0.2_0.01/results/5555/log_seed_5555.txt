save path : ./save/resnet9_quan/clipping_0.2_0.01/results/5555
{'data_path': './dataset', 'arch': 'resnet9_quan', 'dataset': 'cifar10', 'epochs': 40, 'start_epoch': 0, 'attack_sample_size': 100, 'test_batch_size': 100, 'optimizer': 'SGD', 'schedule': [25, 40], 'gammas': [0.1, 0.1], 'workers': 4, 'ngpu': 1, 'gpu_id': 0, 'print_freq': 100, 'decay': 0.0003, 'momentum': 0.9, 'limit_layer': -1, 'randbet_coeff': 10, 'k_top': 100, 'randbet': False, 'clipping_coeff': 0.2, 'learning_rate': 0.01, 'manualSeed': 5555, 'save_path': './save/resnet9_quan/clipping_0.2_0.01/results/5555', 'enable_bfa': True, 'resume': './save/resnet9_quan/clipping_0.2_0.01/model_best.pth.tar', 'quan_bitwidth': None, 'reset_weight': True, 'evaluate': True, 'n_iter': 30, 'fine_tune': True, 'model_only': False, 'random_bfa': False, 'use_cuda': True}
Random Seed: 5555
python version : 3.12.12 | packaged by Anaconda, Inc. | (main, Oct 14 2025, 16:10:16) [MSC v.1929 64 bit (AMD64)]
torch  version : 2.6.0+cu124
cudnn  version : 90100
=> creating model 'resnet9_quan'
=> network :
 Sequential(
  (0): Sequential(
    (0): quan_Conv2d(3, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
  )
  (1): Residual(
    (module): Sequential(
      (0): Sequential(
        (0): quan_Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (1): Sequential(
        (0): quan_Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (2): Sequential(
        (0): quan_Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (2): Residual(
    (module): Sequential(
      (0): Sequential(
        (0): quan_Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (1): Sequential(
        (0): quan_Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (2): Sequential(
        (0): quan_Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (4): Dropout2d(p=0.2, inplace=False)
  (5): Residual(
    (module): Sequential(
      (0): Sequential(
        (0): quan_Conv2d(8, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (1): Sequential(
        (0): quan_Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (2): Sequential(
        (0): quan_Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (skip): Conv2d(8, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
  )
  (6): Residual(
    (module): Sequential(
      (0): Sequential(
        (0): quan_Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (1): Sequential(
        (0): quan_Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (2): Sequential(
        (0): quan_Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
  )
  (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (8): Dropout2d(p=0.3, inplace=False)
  (9): Sequential(
    (0): quan_Conv2d(16, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
  )
  (10): Sequential(
    (0): quan_Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
  )
  (11): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (12): Dropout2d(p=0.3, inplace=False)
  (13): Sequential(
    (0): quan_Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
  )
  (14): AdaptiveAvgPool2d(output_size=(1, 1))
  (15): Flatten()
  (16): quan_Linear(in_features=64, out_features=128, bias=False)
  (17): ReLU(inplace=True)
  (18): Dropout(p=0.35, inplace=False)
  (19): quan_Linear(in_features=128, out_features=10, bias=False)
  (20): Softmax(dim=1)
)
=> loading checkpoint './save/resnet9_quan/clipping_0.2_0.01/model_best.pth.tar'
=> loaded checkpoint './save/resnet9_quan/clipping_0.2_0.01/model_best.pth.tar' (epoch 0)
  **Test** Prec@1 55.120 Prec@5 89.860 Error@1 44.880
k_top=100
Attack_sample=100
************** ATTACK iteration *****************
Iteration: [001/030]   Attack Time 0.905 (0.905)  [2025-10-29 13:04:42]
loss before attack: 1.5859
loss after attack: 1.7122
bit flips: 1
hamming_dist: 1
  **Test** Prec@1 49.590 Prec@5 88.300 Error@1 50.410
iteration Time 21.535 (21.535)
************** ATTACK iteration *****************
Iteration: [002/030]   Attack Time 0.296 (0.600)  [2025-10-29 13:05:04]
loss before attack: 1.7122
loss after attack: 1.8099
bit flips: 2
hamming_dist: 2
  **Test** Prec@1 44.420 Prec@5 86.720 Error@1 55.580
iteration Time 21.672 (21.604)
************** ATTACK iteration *****************
Iteration: [003/030]   Attack Time 0.299 (0.500)  [2025-10-29 13:05:26]
loss before attack: 1.8099
loss after attack: 1.9656
bit flips: 3
hamming_dist: 3
  **Test** Prec@1 33.500 Prec@5 82.160 Error@1 66.500
iteration Time 21.578 (21.595)
************** ATTACK iteration *****************
Iteration: [004/030]   Attack Time 0.299 (0.450)  [2025-10-29 13:05:48]
loss before attack: 1.9656
loss after attack: 2.1016
bit flips: 4
hamming_dist: 4
  **Test** Prec@1 24.900 Prec@5 74.430 Error@1 75.100
iteration Time 21.405 (21.548)
************** ATTACK iteration *****************
Iteration: [005/030]   Attack Time 0.295 (0.419)  [2025-10-29 13:06:09]
loss before attack: 2.1016
loss after attack: 2.1918
bit flips: 5
hamming_dist: 5
  **Test** Prec@1 19.980 Prec@5 67.920 Error@1 80.020
iteration Time 21.557 (21.550)
************** ATTACK iteration *****************
Iteration: [006/030]   Attack Time 0.289 (0.397)  [2025-10-29 13:06:31]
loss before attack: 2.1918
loss after attack: 2.2527
bit flips: 6
hamming_dist: 6
  **Test** Prec@1 16.450 Prec@5 63.400 Error@1 83.550
iteration Time 21.427 (21.529)
************** ATTACK iteration *****************
Iteration: [007/030]   Attack Time 0.285 (0.381)  [2025-10-29 13:06:53]
loss before attack: 2.2527
loss after attack: 2.2666
bit flips: 7
hamming_dist: 7
  **Test** Prec@1 13.230 Prec@5 58.060 Error@1 86.770
iteration Time 21.409 (21.512)
************** ATTACK iteration *****************
Iteration: [008/030]   Attack Time 0.296 (0.370)  [2025-10-29 13:07:15]
loss before attack: 2.2666
loss after attack: 2.2781
bit flips: 8
hamming_dist: 8
  **Test** Prec@1 12.010 Prec@5 55.230 Error@1 87.990
iteration Time 21.496 (21.510)
************** ATTACK iteration *****************
Iteration: [009/030]   Attack Time 0.286 (0.361)  [2025-10-29 13:07:36]
loss before attack: 2.2781
loss after attack: 2.2930
bit flips: 9
hamming_dist: 9
  **Test** Prec@1 10.770 Prec@5 52.870 Error@1 89.230
iteration Time 21.620 (21.522)
